#!/usr/bin/env node

const {
    compose,
    not,
    converge,
    test: testRegex,
    unary,
} = require('ramda');

const {
    InvalidModuleConfigError,
} = require('../utils/exceptions');

const utils = require('../utils/helpers');

const templatePath =
    utils.getTemplatePath(utils.getConfig('boilerplateName'));

if(!templatePath) {
    throw new InvalidModuleConfigError(
        'Invalid boilerplate directory'
    );
}

const {
    ignore: ignoredRegex,
    data: templateData,
    preventExecution = false,
} = utils.importModuleConfig(templatePath);

if(!preventExecution) {
    utils.getTemplateFiles(templatePath)
        .filter(utils.isFile)
        .filter(compose(not, testRegex(ignoredRegex)))
        .map(unary(
            converge(utils.createFile, [
                unary(utils.renderTemplateFromFile(templateData)),
                unary(utils.toOutputTemplatePath(templatePath)),
            ]),
        ));
}

